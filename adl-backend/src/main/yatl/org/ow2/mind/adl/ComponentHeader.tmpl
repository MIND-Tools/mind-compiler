package org.ow2.mind.adl;

import static org.ow2.mind.st.BackendFormatRenderer.*;

import org.objectweb.fractal.adl.ADLException;
import org.objectweb.fractal.adl.Definition;
import org.objectweb.fractal.adl.interfaces.Interface;
import org.objectweb.fractal.adl.interfaces.InterfaceContainer;
import org.objectweb.fractal.adl.types.TypeInterface;
import org.ow2.mind.adl.ast.Component;
import org.ow2.mind.adl.ast.ComponentContainer;
import org.ow2.mind.adl.idl.InterfaceDefinitionDecorationHelper;
import org.ow2.mind.adl.membrane.ast.Controller;
import org.ow2.mind.adl.membrane.ast.ControllerContainer;
import org.ow2.mind.idl.ast.InterfaceDefinition;

public class ComponentHeader {


    public $generate(Definition definition) throws ADLException {
$/* Generated file: <nameToPath(definition.getName())>.adl.h */
#ifndef __COMPONENT_<toUpperCName(definition.getName())>_ADL_H
#define __COMPONENT_<toUpperCName(definition.getName())>_ADL_H

#include "mindcommon.h"

$/* Start including the interface descriptions */
<Interface itf : ((InterfaceContainer) definition).getInterfaces() |
  {#include "<nameToPath(((TypeInterface) itf).getSignature())>.itf.h"}; separator="\n">
<$usedInterfaceDefinitions(definition)>
$/* End including the interface descriptions */

<% if (definition instanceof ComponentContainer) { %>
$/* Start including the sub-component descriptions */
<Component comp : ((ComponentContainer) definition).getComponents() |
  {#include "<nameToPath(comp.getDefinitionReference().getName())>.adl.h"}; separator="\n">
$/* End including the sub-component descriptions */
<% } %>

<$controllerGlobalDecls(definition)>

$/* Start definition of internal component data type */
struct __component_<toCName(definition.getName())>_internal_data_t {
<$typeStructures(definition)>
<$subComponentStructures(definition)>
<$attributeStructures(definition)>
<$controllerStructures(definition)>
};
$/* End definition of internal component data type */

$/* Start definition of component type */
<$componentTypeDef(definition)> 
$/* End  definition of component type */

$/* Start declaration of interface V-Tables. */
<$componentVTableDecl(definition)>
$/* End declaration of interface V-Tables. */

$/* Start declaration of factory */
<$factoryDef(definition)>
$/* End declaration of factory */

#endif $/* __COMPONENT_<definition.name;format="toUpperCName">_ADL_H */

    }

  // ---------------------------------------------------------------------------
  // Internal templates
  // ---------------------------------------------------------------------------

  // ---------------------------------------------------------------------------
  // controllers global declarations

  protected $controllerGlobalDecls(Definition definition) {
    <% if (definition instanceof ControllerContainer) { %>
<Controller ctrl : ((ControllerContainer) definition).getControllers() |
  $controllerGlobalDecl(definition, ctrl)>
    
    <% } %>
  }
  
  protected $controllerGlobalDecl(Definition definition, Controller ctrl) {
// TODO <Source src : ctrl.getSources() | { } >
  }
  
  // ---------------------------------------------------------------------------
  // Used interface definitions

  protected $usedInterfaceDefinitions(Definition definition) throws ADLException {
<InterfaceDefinition itf : InterfaceDefinitionDecorationHelper.getUsedInterfaceDefinitions(definition, null, null) |
  {#include "<nameToPath(itf.getName())>.itf.h"}>
  }
  
  protected $typeStructures(Definition definition) {
    // TODO
  }
  
  protected $subComponentStructures(Definition definition) {
    // TODO
  }
  
  protected $attributeStructures(Definition definition) {
    // TODO
  }
  
  protected $controllerStructures(Definition definition) {
    // TODO
  }
  
  protected $componentTypeDef(Definition definition) {
    // TODO
  }
  
  protected $componentVTableDecl(Definition definition) {
    // TODO
  }
  
  protected $factoryDef(Definition definition) {
    // TODO
  }
  
}