template st.membrane.InterfaceDelegator
  : st.common.ComponentHelper
  implements st.membrane.ControllerGenerator {

st.interfaces.IDLDefinition idl2c = st.interfaces.IDL2C; 

$${

// -----------------------------------------------------------------------------
// Implementation of the ControllerGenerator interface
// -----------------------------------------------------------------------------

ControllerData(definition, controller) ::= ""

ControllerImplementation(definition, controller, interfaceDefinitions) ::= <<
<ItfDelegator(itf=first(controller.controllerInterfaces).astDecorations.("referenced-interface"), interfaceDefinitions=interfaceDefinitions)>
>>

// -----------------------------------------------------------------------------
// Internal templates
// -----------------------------------------------------------------------------

ItfDelegator(itf, interfaceDefinitions) ::= <<
/* Start interface delegator for interface <itf.name> */
<if (itf.numberOfElement)>
<itf.astDecorations.("collectionIndexes"):{index | <interfaceDefinitions.(itf.signature).methods:MethodDelegator(itf=itf, index=index, method=it);separator="\n">};separator="\n">
<else>
<interfaceDefinitions.(itf.signature).methods:MethodDelegator(itf=itf, method=it);separator="\n">
<endif>

/* End interface delegator for interface <itf.name> */


>>

MethodDelegator(itf, index, method) ::= <<
<if (definition.astDecorations.("is-singleton"))>
<(idl2c.methodDef)(method=method,withThisPtr="false",methodName=ProxyName(itfName=itf.name, index=index, methodName=method.name)) > { 
<else>
<(idl2c.methodDef)(method=method,withThisPtr="typed",methodName=ProxyName(itfName=itf.name, index=index, methodName=method.name)) > { 
<endif>

<if (! ((idl2c.isVoidMethod)(method=method)))>
  return
<endif>
<if (method.parameters)>
  CALL_INTERFACE_PTR_WITH_PARAM(CONTEXT_PTR_ACCESS->__component_internal_data.<if (isServer.(itf.role))>inner_<endif>type.<itf.name><if (index)>[<index>]<endif>, <method.name>)
       <method.parameters:{<it.name>};separator=", "> PARAMS_RPARENT;
<else>
  CALL_INTERFACE_PTR_WITHOUT_PARAM(CONTEXT_PTR_ACCESS->__component_internal_data.<if (isServer.(itf.role))>inner_<endif>type.<itf.name><if (index)>[<index>]<endif>, <method.name>);
<endif>
}
>>


ProxyName(itfName, index, methodName) ::= "INTERFACE<if (index)>_COLLECTION<endif>_METHOD(<itfName><if (index)>,<index><endif>, <methodName>)"

}$$
}